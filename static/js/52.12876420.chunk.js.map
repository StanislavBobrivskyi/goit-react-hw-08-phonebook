{"version":3,"file":"static/js/52.12876420.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactsForm.js","Pages/AddContacts/AddContacts.style.js","Pages/AddContacts/AddContacts.js"],"sourcesContent":["import { ErrorMessage, Field, Formik } from 'formik';\nimport { FiUserPlus } from 'react-icons/fi';\nimport * as Yup from 'yup';\n\nimport { Form } from 'formik';\n\nimport { PatternFormat } from 'react-number-format';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addNewContact } from 'redux/contacts/thunk';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { TextField, createTheme } from '@mui/material';\nimport { ThemeProvider } from '@mui/material/styles';\nimport PersonOutlineIcon from '@mui/icons-material/PersonOutline';\nimport PhoneEnabledIcon from '@mui/icons-material/PhoneEnabled';\nimport toast from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nimport { selectTheme } from 'redux/userTheme/slice';\nimport { grey } from '@mui/material/colors';\nimport { useMemo } from 'react';\n\n// ====== Validation ========= //\nconst ContactsSchema = Yup.object().shape({\n  name: Yup.string().required('* Name is required'),\n  number: Yup.string().required('* Phone number is required'),\n});\n\nconst initialValues = { name: '', number: '' };\n\nexport const ContactsForm = () => {\n  const allcontacts = useSelector(selectContacts);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userTheme = useSelector(selectTheme);\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (allcontacts.find(contact => contact.name === values.name)) {\n      return alert(`${values.name} is already in contacts`);\n    }\n\n    if (allcontacts.find(contact => contact.number === values.number)) {\n      return alert(`${values.number} is already in contacts`);\n    }\n\n    dispatch(addNewContact({ ...values }));\n    navigate('/');\n\n    toast.success(\n      <div>\n        <b>{values.name}</b> added in phonebook\n      </div>,\n      {\n        duration: 4000,\n        icon: 'âœ…',\n      }\n    );\n    resetForm();\n  };\n\n  // MUI Theme\n  const mode = userTheme;\n  let theme = useMemo(() => {\n    return createTheme({\n      palette: {\n        mode: mode,\n        primary: {\n          main: 'rgb(32, 139, 74)',\n          ...(mode === 'dark' && {\n            main: 'rgb(49, 189, 126)',\n          }),\n        },\n        secondary: {\n          main: 'rgb(105, 105, 105)',\n          ...(mode === 'dark' && {\n            main: '#fff',\n          }),\n        },\n        ...(mode === 'dark' && {\n          background: {\n            default: '#101d2b',\n            paper: '#101d2b',\n          },\n        }),\n        text: {\n          ...(mode === 'light'\n            ? {\n                primary: grey[900],\n                secondary: grey[800],\n              }\n            : {\n                primary: '#fff',\n                secondary: grey[500],\n              }),\n        },\n      },\n    });\n  }, [mode]);\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={ContactsSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form autoComplete=\"off\">\n          <ThemeProvider theme={theme}>\n            <div>\n              <PersonOutlineIcon color=\"secondary\" />\n              <Field\n                as={TextField}\n                label=\"Name\"\n                name=\"name\"\n                multiline\n                variant=\"standard\"\n                className=\"fieldName\"\n              />\n            </div>\n            <ErrorMessage\n              name=\"name\"\n              component=\"span\"\n              style={{ color: 'red' }}\n            />\n\n            <div>\n              <PhoneEnabledIcon color=\"secondary\" />\n              <Field\n                as={PatternFormat}\n                customInput={TextField}\n                name=\"number\"\n                variant=\"standard\"\n                format=\"+38 (0##) ### ## ##\"\n                allowEmptyFormatting={true}\n                mask=\"_\"\n              />\n            </div>\n            <ErrorMessage\n              name=\"number\"\n              component=\"span\"\n              style={{ color: 'red' }}\n            />\n\n            <button type=\"submit\">\n              <FiUserPlus size={26} />\n            </button>\n          </ThemeProvider>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  padding-top: 40px;\n  font-size: 12px;\n\n  h2 {\n    margin-bottom: 20px;\n    color: ${props => props.theme.colors.addContact.text};\n  }\n\n  @media screen and (min-width: ${props => props.theme.media.m}) {\n    font-size: 14px;\n  }\n`;\n\nexport const AvatarWrapper = styled.div`\n  display: flex;\n  gap: 70px;\n\n  @media screen and (min-width: ${props => props.theme.media.m}) {\n    gap: 135px;\n  }\n`;\n\nexport const BackBtn = styled(Link)`\n  color: ${props => props.theme.colors.header.text};\n  transition: color 250ms ease-in-out;\n\n  &:hover {\n    color: #47a76a;\n  }\n\n  &:active {\n    color: #47a76a;\n  }\n`;\n","import { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { Wrapper, AvatarWrapper, BackBtn } from './AddContacts.style';\nimport { TbArrowBackUp } from 'react-icons/tb';\n\nconst AddContacts = () => {\n  return (\n    <Wrapper>\n      <h2>Create Contact</h2>\n      <AvatarWrapper>\n        <BackBtn to=\"/\">\n          <TbArrowBackUp size={'30px'} />\n        </BackBtn>\n        <AccountCircleIcon sx={{ fontSize: '210px', color: '#e5e5e5' }} />\n      </AvatarWrapper>\n      <hr />\n      <ContactsForm />\n    </Wrapper>\n  );\n};\n\nexport default AddContacts;\n"],"names":["ContactsSchema","Yup","shape","name","required","number","initialValues","ContactsForm","allcontacts","useSelector","selectContacts","navigate","useNavigate","dispatch","useDispatch","mode","selectTheme","theme","useMemo","createTheme","palette","_objectSpread","primary","main","secondary","background","default","paper","text","grey","_jsx","children","Formik","validationSchema","onSubmit","values","_ref","resetForm","find","contact","alert","concat","addNewContact","toast","_jsxs","duration","icon","Form","autoComplete","ThemeProvider","PersonOutlineIcon","color","Field","as","TextField","label","multiline","variant","className","ErrorMessage","component","style","PhoneEnabledIcon","PatternFormat","customInput","format","allowEmptyFormatting","mask","type","FiUserPlus","size","Wrapper","styled","_templateObject","_taggedTemplateLiteral","props","colors","addContact","media","m","AvatarWrapper","_templateObject2","BackBtn","Link","_templateObject3","header","to","TbArrowBackUp","AccountCircleIcon","sx","fontSize"],"sourceRoot":""}