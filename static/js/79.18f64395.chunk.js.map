{"version":3,"file":"static/js/79.18f64395.chunk.js","mappings":"iSAcaA,EAAcC,EAAAA,KAExBC,MAAM,CACLC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,qBACpDC,SAAUJ,EAAAA,KAEPK,IAAI,EAAG,+CACPF,SAAS,0BAEbA,WAEI,SAASG,IAAa,IAADC,EAAAC,EACpBC,GAAWC,EAAAA,EAAAA,MAEjBC,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,cAAe,CAAEX,MAAO,GAAIE,SAAU,IACtCU,UAAUC,EAAAA,EAAAA,GAAYhB,KANtBiB,EAAQL,EAARK,SACAC,EAAYN,EAAZM,aACaC,EAAMP,EAAnBQ,UAAaD,OACbE,EAAKT,EAALS,MAoBF,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAU,CAACC,SAAUT,GAhBT,SAAHU,GAA6B,IAAvBzB,EAAKyB,EAALzB,MAAOE,EAAQuB,EAARvB,SACzBK,GAASmB,EAAAA,EAAAA,IAAM,CAAE1B,MAAAA,EAAOE,SAAAA,KACrByB,SACAC,MAAK,SAAAC,GACJC,IAAAA,OAAAA,QAAwB,6BAADC,OAA8BF,EAAKG,KAAKC,MACjE,IACCC,OAAM,SAAAC,GACC,wCAANA,EACIL,IAAAA,OAAAA,QAAwB,2BACxBA,IAAAA,OAAAA,QAAwB,2CAC9B,IACFZ,GACF,IAIiDG,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,SAAOiB,QAAQ,QAAOf,SAAC,WACvBF,EAAAA,EAAAA,KAACkB,EAAAA,IAAWC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKxB,EAAS,UAAQ,IAAEyB,KAAK,QAAQC,GAAG,YACpDrB,EAAAA,EAAAA,KAACsB,EAAAA,GAAY,CAAApB,SAAc,QAAdhB,EAAEW,EAAOhB,aAAK,IAAAK,OAAA,EAAZA,EAAcqC,WAC7BvB,EAAAA,EAAAA,KAAA,SAAOiB,QAAQ,WAAUf,SAAC,cAC1BF,EAAAA,EAAAA,KAACkB,EAAAA,IAAWC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKxB,EAAS,aAAW,IAAEyB,KAAK,WAAWC,GAAG,eAC1DrB,EAAAA,EAAAA,KAACsB,EAAAA,GAAY,CAAApB,SAAiB,QAAjBf,EAAEU,EAAOd,gBAAQ,IAAAI,OAAA,EAAfA,EAAiBoC,WAChCvB,EAAAA,EAAAA,KAACwB,EAAAA,GAAU,CAACJ,KAAK,SAAQlB,SAAC,cAIlC,C,cChDA,MAbA,WACE,OACEC,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,2BACJF,EAAAA,EAAAA,KAACf,EAAS,KACVkB,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,MACAF,EAAAA,EAAAA,KAACyB,EAAAA,EAAc,CAACC,GAAG,YAAWxB,SAAC,aAAyB,gCAKlE,C,+JCbaE,EAAauB,EAAAA,EAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+GAQxBX,EAAcS,EAAAA,EAAAA,MAAYG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,yTAiB1BL,EAAaG,EAAAA,EAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2ZAoB1BP,EAAeK,EAAAA,EAAAA,EAAQK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2J","sources":["components/Form/LoginForm.jsx","Pages/Login.jsx","components/Form/Form.styled.jsx"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport Notiflix from 'notiflix';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport {\n  StyledForm,\n  StyledInput,\n  FormButton,\n  ErrorMessage,\n} from './Form.styled';\nimport { logIn } from '../../redux/auth/authOperation';\n\nexport const loginSchema = yup\n  .object()\n  .shape({\n    email: yup.string().email('Invalid email').required('Email is required'),\n    password: yup\n      .string()\n      .min(7, 'Password must be at least 7 characters long')\n      .required('Password is required'),\n  })\n  .required();\n\nexport function LoginForm() {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({\n    defaultValues: { email: '', password: '' },\n    resolver: yupResolver(loginSchema),\n  });\n\n  const onSubmit = ({ email, password }) => {\n    dispatch(logIn({ email, password }))\n      .unwrap()\n      .then(resp => {\n        Notiflix.Notify.success(`Successfully logged in as ${resp.user.name}`);\n      })\n      .catch(e => {\n        e === 'Request failed with status code 400'\n          ? Notiflix.Notify.failure('Wrong email or password')\n          : Notiflix.Notify.failure('Something went wrong, try one nore time!');\n      });\n    reset();\n  };\n\n  return (\n    <>\n      <StyledForm onSubmit={handleSubmit(onSubmit)}>\n        <label htmlFor=\"email\">Email</label>\n        <StyledInput {...register('email')} type=\"email\" id=\"email\" />\n        <ErrorMessage>{errors.email?.message}</ErrorMessage>\n        <label htmlFor=\"password\">Password</label>\n        <StyledInput {...register('password')} type=\"password\" id=\"password\" />\n        <ErrorMessage>{errors.password?.message}</ErrorMessage>\n        <FormButton type=\"submit\">Login</FormButton>\n      </StyledForm>\n    </>\n  );\n}\n","import React from 'react';\nimport { LoginForm } from '../components/Form/LoginForm';\nimport { NavigationLink } from '../components/AuthNav/AuthNav.styled';\n\nfunction Login() {\n  return (\n    <>\n      <h3>Login to your account</h3>\n      <LoginForm />\n      <h4>\n        Or<NavigationLink to=\"/register\">Register</NavigationLink> to create a\n        new account\n      </h4>\n    </>\n  );\n}\n\nexport default Login;\n","import styled from '@emotion/styled';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n  padding: 10px;\n`;\n\nexport const StyledInput = styled.input`\n  width: 250px;\n  border-radius: 6px;\n  outline: none;\n  border: 1px solid green;\n  padding: 5px;\n  background-color: #ffffff;\n  box-shadow: 1px 2px 6px 0px rgba(33, 83, 60, 0.5);\n\n  @media screen and (max-width: 768px) {\n    width: 250px;\n  }\n\n  &:focus {\n    border-color: #00ff00;\n  }\n`;\nexport const FormButton = styled.button`\n  margin-top: 40px;\n  padding: 6px;\n  width: 250px;\n  height: 100%;\n  flex-shrink: 0;\n  border-radius: 33.5px;\n  background: #3cb3ab;\n  border: none;\n  &:hover {\n    color: #fff;\n    background-color: #147a73;\n    box-shadow: 1px 2px 6px 0px rgba(33, 83, 60, 0.7);\n  }\n  box-shadow: 0 2px 4px rgba(33, 83, 60, 0.5);\n\n  @media screen and (max-width: 768px) {\n    font-size: 18px;\n  }\n`;\nexport const ErrorMessage = styled.p`\n  color: red;\n  font-size: 12px;\n  /* box-shadow: 0 0 10px #ff0000; */\n  border-radius: 25px;\n  padding: 2px 4px;\n  background-color: #fff;\n`;\n"],"names":["loginSchema","yup","shape","email","required","password","min","LoginForm","_errors$email","_errors$password","dispatch","useDispatch","_useForm","useForm","defaultValues","resolver","yupResolver","register","handleSubmit","errors","formState","reset","_jsx","_Fragment","children","_jsxs","StyledForm","onSubmit","_ref","logIn","unwrap","then","resp","Notiflix","concat","user","name","catch","e","htmlFor","StyledInput","_objectSpread","type","id","ErrorMessage","message","FormButton","NavigationLink","to","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4"],"sourceRoot":""}